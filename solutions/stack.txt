#include <iostream>
using namespace std;

class Stack
{
    private:
        static const int MAX_SIZE = 5;
        int top;
        int arr[MAX_SIZE];

    public:
        Stack() : top(-1) {}

        bool isEmpty() { return top == -1; }

        bool isFull() { return top == MAX_SIZE - 1; }

        void push(int value)
        {
            if (isFull())
            {
                cout << "stack overflow" << endl;
            }
            arr[++top] = value;
        }

        void pop() { top--; }

        int count() { return top + 1; }

        void peak()
        {
            if (isEmpty())
            {
                cout << "stack is undeflow" << endl;
            }
            cout << "Peek: " << arr[top] << endl;
        }

        void change(int pos, int value)
        {
            if (pos < 0 || pos > top)
            {
                cout << "Invalid position!" << endl;
                return;
            }
            arr[pos] = value;
            cout << "Changed position " << pos << " to " << value << endl;
        }

        void display()
        {
            if (isEmpty())
            {
                cout << "Stack is empty!" << endl;
                return;
            }

            cout << "Stack elements (top to bottom):" << endl;
            for (int i = top; i >= 0; i--)
            {
                cout << arr[i] << endl;
            }
        }
};

int main()
{
    cout << "Hello stack!!!" << endl;
    Stack s;

    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);

    s.display();

    s.peak();
    s.change(2, 80);
    s.display();

    return 0;
}
